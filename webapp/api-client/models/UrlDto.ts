/* tslint:disable */
/* eslint-disable */
/**
 * URL List API
 * API for managing URL lists         Schema: <a href=\"http://localhost:3001/api-yaml\" target=\"_blank\">http://localhost:3001/api-yaml</a>       
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UrlDto
 */
export interface UrlDto {
    /**
     * 
     * @type {string}
     * @memberof UrlDto
     */
    id: string;
    /**
     * The URL of the link
     * @type {string}
     * @memberof UrlDto
     */
    url: string;
    /**
     * The slug of the URL
     * @type {string}
     * @memberof UrlDto
     */
    title: string;
    /**
     * A brief description of the URL
     * @type {string}
     * @memberof UrlDto
     */
    description: string;
    /**
     * The order of the URL in the list
     * @type {number}
     * @memberof UrlDto
     */
    order: number;
    /**
     * The date when the URL was created
     * @type {Date}
     * @memberof UrlDto
     */
    createdAt: Date;
    /**
     * The date when the URL was last updated
     * @type {Date}
     * @memberof UrlDto
     */
    updatedAt: Date;
    /**
     * The ID of the URL list to which the URL belongs
     * @type {string}
     * @memberof UrlDto
     */
    urlListId: string;
}

/**
 * Check if a given object implements the UrlDto interface.
 */
export function instanceOfUrlDto(value: object): value is UrlDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('order' in value) || value['order'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('urlListId' in value) || value['urlListId'] === undefined) return false;
    return true;
}

export function UrlDtoFromJSON(json: any): UrlDto {
    return UrlDtoFromJSONTyped(json, false);
}

export function UrlDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UrlDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'],
        'title': json['title'],
        'description': json['description'],
        'order': json['order'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'urlListId': json['urlListId'],
    };
}

export function UrlDtoToJSON(value?: UrlDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'url': value['url'],
        'title': value['title'],
        'description': value['description'],
        'order': value['order'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
        'urlListId': value['urlListId'],
    };
}

