/* tslint:disable */
/* eslint-disable */
/**
 * URL List API
 * API for managing URL lists         Schema: <a href=\"http://localhost:3001/api-yaml\" target=\"_blank\">http://localhost:3001/api-yaml</a>       
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UrlDto } from './UrlDto';
import {
    UrlDtoFromJSON,
    UrlDtoFromJSONTyped,
    UrlDtoToJSON,
} from './UrlDto';

/**
 * 
 * @export
 * @interface UrlListDto
 */
export interface UrlListDto {
    /**
     * 
     * @type {string}
     * @memberof UrlListDto
     */
    id: string;
    /**
     * The slug of the link unique identifier for the URL list
     * @type {string}
     * @memberof UrlListDto
     */
    slug: string;
    /**
     * The title of the link
     * @type {string}
     * @memberof UrlListDto
     */
    title: string;
    /**
     * The date when the URL list was created
     * @type {Date}
     * @memberof UrlListDto
     */
    createdAt: Date;
    /**
     * The date when the URL list was last updated
     * @type {Date}
     * @memberof UrlListDto
     */
    updatedAt: Date;
    /**
     * 
     * @type {Array<UrlDto>}
     * @memberof UrlListDto
     */
    urls: Array<UrlDto>;
}

/**
 * Check if a given object implements the UrlListDto interface.
 */
export function instanceOfUrlListDto(value: object): value is UrlListDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('urls' in value) || value['urls'] === undefined) return false;
    return true;
}

export function UrlListDtoFromJSON(json: any): UrlListDto {
    return UrlListDtoFromJSONTyped(json, false);
}

export function UrlListDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UrlListDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'slug': json['slug'],
        'title': json['title'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'urls': ((json['urls'] as Array<any>).map(UrlDtoFromJSON)),
    };
}

export function UrlListDtoToJSON(value?: UrlListDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'slug': value['slug'],
        'title': value['title'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
        'urls': ((value['urls'] as Array<any>).map(UrlDtoToJSON)),
    };
}

